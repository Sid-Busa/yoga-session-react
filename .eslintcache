[{"D:\\Yoga_session\\frontend\\src\\index.js":"1","D:\\Yoga_session\\frontend\\src\\App.js":"2","D:\\Yoga_session\\frontend\\src\\reportWebVitals.js":"3","D:\\Yoga_session\\frontend\\src\\components\\Card\\index.js":"4","D:\\Yoga_session\\frontend\\src\\components\\Card\\card.js":"5","D:\\Yoga_session\\frontend\\src\\components\\CardInfo\\CardInfo.js":"6","D:\\Yoga_session\\frontend\\src\\components\\Model\\index.js":"7","D:\\Yoga_session\\frontend\\src\\components\\Model\\Register.js":"8","D:\\Yoga_session\\frontend\\src\\components\\Axios\\axios.js":"9","D:\\Yoga_session\\frontend\\src\\reduxStore\\index.js":"10","D:\\Yoga_session\\frontend\\src\\reduxStore\\store.js":"11","D:\\Yoga_session\\frontend\\src\\reduxStore\\reducer\\rootReducer.js":"12","D:\\Yoga_session\\frontend\\src\\reduxStore\\reducer\\calenderEvent.js":"13","D:\\Yoga_session\\frontend\\src\\components\\EventInfo\\index.js":"14","D:\\Yoga_session\\frontend\\src\\components\\EventInfo\\EventInfo.js":"15","D:\\Yoga_session\\frontend\\src\\components\\EventInfo\\header.js":"16","D:\\Yoga_session\\frontend\\src\\components\\EventCalendar\\index.js":"17","D:\\Yoga_session\\frontend\\src\\components\\EventInfo\\Header.js":"18","D:\\Yoga_session\\frontend\\src\\components\\Card\\Card.js":"19","D:\\Yoga_session\\frontend\\src\\components\\EventCalendar\\EventCalendar.js":"20","D:\\Yoga_session\\frontend\\src\\components\\Calendar\\Calendar.js":"21"},{"size":621,"mtime":1607949320635,"results":"22","hashOfConfig":"23"},{"size":465,"mtime":1608019609075,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":46,"mtime":1608019186692,"results":"26","hashOfConfig":"23"},{"size":795,"mtime":1608019172649,"results":"27","hashOfConfig":"23"},{"size":1074,"mtime":1608007913580,"results":"28","hashOfConfig":"23"},{"size":58,"mtime":1607840614771,"results":"29","hashOfConfig":"23"},{"size":2277,"mtime":1608006585163,"results":"30","hashOfConfig":"23"},{"size":654,"mtime":1608006691956,"results":"31","hashOfConfig":"23"},{"size":57,"mtime":1607943758701,"results":"32","hashOfConfig":"23"},{"size":355,"mtime":1607943755667,"results":"33","hashOfConfig":"23"},{"size":143,"mtime":1607950298092,"results":"34","hashOfConfig":"23"},{"size":589,"mtime":1607950232129,"results":"35","hashOfConfig":"23"},{"size":61,"mtime":1608019192980,"results":"36","hashOfConfig":"23"},{"size":585,"mtime":1608019156604,"results":"37","hashOfConfig":"23"},{"size":358,"mtime":1608019148732,"results":"38","hashOfConfig":"23"},{"size":77,"mtime":1608019498461,"results":"39","hashOfConfig":"23"},{"size":358,"mtime":1608019148732,"results":"40","hashOfConfig":"23"},{"size":795,"mtime":1608019172649,"results":"41","hashOfConfig":"23"},{"size":3812,"mtime":1608019550397,"results":"42","hashOfConfig":"23"},{"size":4460,"mtime":1608019497455,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"18jq8f0",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Yoga_session\\frontend\\src\\index.js",[],["91","92"],"D:\\Yoga_session\\frontend\\src\\App.js",[],"D:\\Yoga_session\\frontend\\src\\reportWebVitals.js",[],"D:\\Yoga_session\\frontend\\src\\components\\Card\\index.js",[],"D:\\Yoga_session\\frontend\\src\\components\\Card\\card.js",[],"D:\\Yoga_session\\frontend\\src\\components\\CardInfo\\CardInfo.js",[],"D:\\Yoga_session\\frontend\\src\\components\\Model\\index.js",[],"D:\\Yoga_session\\frontend\\src\\components\\Model\\Register.js",["93"],"import React, { useState } from \"react\";\r\nimport API from \"../Axios/axios\";\r\nimport \"./style.css\";\r\n\r\nconst Register = ({ handlePopUPToggle }) => {\r\n  // state for register form\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n  });\r\n  // state for error message\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  \r\n  // method for handling state change\r\n  const handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    setFormData((preState) => ({\r\n      ...preState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  // method for handle submit register form\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (formData.name === \"\" || formData.email === \"\") {\r\n      alert(\"All field must be required\");\r\n    }\r\n    try {\r\n      const regiter = await API.post(\"/user\", {\r\n        name: formData.name,\r\n        email: formData.email,\r\n      });\r\n      if (regiter.status) {\r\n        alert(\"Register successfully\");\r\n        handlePopUPToggle();\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      alert(e.error);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"popup_register\">\r\n      <div className=\"register_form\">\r\n        <div className=\"header\">\r\n          <div>\r\n            <h3>Register form</h3>\r\n          </div>\r\n          <div className=\"close\" onClick={handlePopUPToggle}>\r\n            <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n          </div>\r\n        </div>\r\n        <form onSubmit={handleSubmit}>\r\n          <fieldset>\r\n            <input\r\n              value={formData.name}\r\n              name=\"name\"\r\n              placeholder=\"Your name\"\r\n              type=\"text\"\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </fieldset>\r\n          <fieldset>\r\n            <input\r\n              value={formData.email}\r\n              name=\"email\"\r\n              placeholder=\"Your email\"\r\n              type=\"email\"\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </fieldset>\r\n          <div className=\"form_error_message\">{errorMessage}</div>\r\n          <button type=\"submit\"> Register </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","D:\\Yoga_session\\frontend\\src\\components\\Axios\\axios.js",[],"D:\\Yoga_session\\frontend\\src\\reduxStore\\index.js",[],"D:\\Yoga_session\\frontend\\src\\reduxStore\\store.js",["94"],"/* global window */\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\nimport rootReducer from './reducer/rootReducer';\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(rootReducer, composeEnhancer(applyMiddleware(reduxThunk)));\r\n","D:\\Yoga_session\\frontend\\src\\reduxStore\\reducer\\rootReducer.js",[],"D:\\Yoga_session\\frontend\\src\\reduxStore\\reducer\\calenderEvent.js",["95"],"const initialState = {\r\n    day: \"\",\r\n    monthName:\"\",\r\n    weekName : \"\",\r\n    year:\"\",\r\n    eventList:[]\r\n};\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"SET_EVENT_LIST\":\r\n            return {\r\n                ...state,\r\n                day: action.payload.day,\r\n                monthName:action.payload.monthName,\r\n                weekName:action.payload.weekName,\r\n                year:action.payload.year,\r\n                eventList: action.payload.eventList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","D:\\Yoga_session\\frontend\\src\\components\\EventInfo\\index.js",[],"D:\\Yoga_session\\frontend\\src\\components\\EventInfo\\EventInfo.js",[],"D:\\Yoga_session\\frontend\\src\\components\\EventInfo\\header.js",[],"D:\\Yoga_session\\frontend\\src\\components\\EventCalendar\\index.js",[],"D:\\Yoga_session\\frontend\\src\\components\\EventInfo\\Header.js",[],"D:\\Yoga_session\\frontend\\src\\components\\Card\\Card.js",[],"D:\\Yoga_session\\frontend\\src\\components\\EventCalendar\\EventCalendar.js",["96","97","98","99"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport API from \"../Axios/axios\";\r\nimport Calendar from \"../Calendar/Calendar\";\r\nimport \"./style.css\";\r\n\r\nconst EventCalendar = () => {\r\n  const [dateContext, setDateContext] = useState(moment());\r\n  const [currentMonthData, setCurrentMonthData] = useState(null);\r\n  const [selectedDays, setSelectedDays] = useState([]);\r\n  const dispatch = useDispatch();\r\n\r\n  // get all event for dateContext(selected months)\r\n  useEffect(() => {\r\n    const getEventDates = async () => {\r\n      const year = moment(dateContext).get(\"year\");\r\n      const month = moment(dateContext).get(\"month\");\r\n      try {\r\n        setSelectedDays([]);\r\n        const datesData = await API.get(`/timing/${year}/${month + 1}`);\r\n        if (datesData.status) {\r\n          let daysArray = [];\r\n          datesData.timing.dates.map((item, index) => {\r\n            daysArray.push(item.date);\r\n          });\r\n          setCurrentMonthData(datesData.timing);\r\n          setSelectedDays(daysArray);\r\n\r\n          dispatch({\r\n            type: \"SET_EVENT_LIST\",\r\n            payload: {\r\n              year,\r\n              day: datesData.timing.dates[0].date,\r\n              monthName: moment(datesData.timing.month, \"MM\").format(\"MMMM\"),\r\n              weekName: moment(\r\n                `${year}-${datesData.timing.month}-${datesData.timing.dates[0].date}`\r\n              ).format(\"dddd\"),\r\n              eventList: datesData.timing.dates[0].data,\r\n            },\r\n          });\r\n        } else {\r\n          setCurrentMonthData(null);\r\n        }\r\n      } catch (e) {\r\n        if (!e.status) {\r\n          console.log(e.message); //not containe any date\r\n        }\r\n        setSelectedDays([]);\r\n        setCurrentMonthData(null);\r\n        dispatch({\r\n          type: \"SET_EVENT_LIST\",\r\n          payload: {\r\n            year,\r\n            monthName: moment(month + 1, \"MM\").format(\"MMMM\"),\r\n            day: null,\r\n            weekName: null,\r\n            eventList: [],\r\n          },\r\n        });\r\n      }\r\n    };\r\n    getEventDates();\r\n  }, [dateContext]);\r\n\r\n  // chnage datacontext based on move to next or previous month\r\n  const handleChange = (data) => {\r\n    setDateContext(data);\r\n  };\r\n\r\n  // get event list for selected day\r\n  const handleDaySelection = (day) => {\r\n    const year = moment(dateContext).get(\"year\");\r\n    const month = moment(dateContext).get(\"month\");\r\n\r\n    if (currentMonthData) {\r\n      const perticularDayInfo = currentMonthData.dates.find((item) => {\r\n        if (item.date == day) {\r\n          return item;\r\n        }\r\n      });\r\n      if (perticularDayInfo) {\r\n        dispatch({\r\n          type: \"SET_EVENT_LIST\",\r\n          payload: {\r\n            year,\r\n            day: perticularDayInfo.date,\r\n            monthName: moment(month + 1, \"MM\").format(\"MMMM\"),\r\n            weekName: moment(\r\n              `${year}-${month + 1}-${perticularDayInfo.date}`\r\n            ).format(\"dddd\"),\r\n            eventList: perticularDayInfo.data,\r\n          },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: \"SET_EVENT_LIST\",\r\n          payload: {\r\n            year,\r\n            monthName: moment(month + 1, \"MM\").format(\"MMMM\"),\r\n            day,\r\n            weekName: moment(`${year}-${month + 1}-${day}`).format(\"dddd\"),\r\n            eventList: [],\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"timing\">\r\n      <div className=\"timing_header\">\r\n        <p> Select a Date & Time </p>\r\n      </div>\r\n      <Calendar\r\n        selectedDays={selectedDays}\r\n        dateContext={dateContext}\r\n        handleChange={handleChange}\r\n        handleDaySelection={handleDaySelection}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventCalendar;\r\n","D:\\Yoga_session\\frontend\\src\\components\\Calendar\\Calendar.js",["100","101","102"],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":12,"column":24,"nodeType":"109","messageId":"110","endLine":12,"endColumn":39},{"ruleId":"111","severity":1,"message":"112","line":1,"column":11,"nodeType":"113","messageId":"114","endLine":1,"endColumn":17},{"ruleId":"115","severity":1,"message":"116","line":8,"column":1,"nodeType":"117","endLine":22,"endColumn":3},{"ruleId":"118","severity":1,"message":"119","line":24,"column":52,"nodeType":"120","messageId":"121","endLine":24,"endColumn":54},{"ruleId":"122","severity":1,"message":"123","line":64,"column":6,"nodeType":"124","endLine":64,"endColumn":19,"suggestions":"125"},{"ruleId":"118","severity":1,"message":"126","line":77,"column":68,"nodeType":"120","messageId":"127","endLine":77,"endColumn":70},{"ruleId":"128","severity":1,"message":"129","line":78,"column":23,"nodeType":"130","messageId":"131","endLine":78,"endColumn":25},{"ruleId":"118","severity":1,"message":"119","line":57,"column":29,"nodeType":"120","messageId":"121","endLine":57,"endColumn":31},{"ruleId":"128","severity":1,"message":"129","line":58,"column":16,"nodeType":"130","messageId":"131","endLine":58,"endColumn":18},{"ruleId":"128","severity":1,"message":"129","line":80,"column":14,"nodeType":"130","messageId":"131","endLine":80,"endColumn":16},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'setErrorMessage' is assigned a value but never used.","Identifier","unusedVar","no-redeclare","'window' is already defined as a built-in global variable.","Block","redeclaredAsBuiltin","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["134"],"Array.prototype.find() expects a value to be returned at the end of arrow function.","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},"Update the dependencies array to be: [dateContext, dispatch]",{"range":"137","text":"138"},[2132,2145],"[dateContext, dispatch]"]